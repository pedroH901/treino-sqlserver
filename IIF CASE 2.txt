--EXEMPLO IF

IF @idade >= 18
BEGIN
PRINT 'Maior de idade'
END
ELSE
BEGIN
PRINT 'Menor de idade'
END

--Exemplo IIF
SELECT IIF(@idade >=18, 'Maior de idade', 'Menor de idade');
--Em resumo, IF é mais poderoso para lógica complexa, enquanto IIF é mais conciso para condições simples
DECLARE @varClassificacao INT
SET @varClassificacao = 2

SELECT 
	IIF(
	@varClassificacao >= 5,
	'Risco alto',
	'Risco baixo') AS 'Status'

--IIF composto
--Para tratar varios resultados possiveis de acordo com mais de um teste lógico

SELECT 
	ProductKey,
	ProductName,
	StockTypeName,
	IIF(
		StockTypeName = 'High',
		'João',
		IIF(
			StockTypeName = 'Mid',
			'Maria',
			'Luis')
		) AS 'Responsável'
FROM
	DimProduct

--ISNULL: trata valores nulos
SELECT
	GeographyKey,
	ContinentName,
	CityName,
	ISNULL(CityName, 'Local desconhecido')
FROM
	DimGeography


--CASE WHEN
SELECT 
CustomerKey,
FirstName,
Gender,
CASE
	WHEN GENDER = 'M' THEN 'Masculino'       
	ELSE 'Feminino'
END AS 'Sexo'
FROM DimCustomer

--CORRIGINDO O NULL
SELECT
	CustomerKey,
	FirstName,
	Gender,
	CASE
		WHEN Gender = 'M' THEN 'Masculino'
		WHEN Gender = 'F' THEN 'Feminino'
		ELSE 'Empresa'
	END AS 'Sexo'
FROM 
	DimCustomer

--CASE + AND
SELECT
	ProductName,
	BrandName,
	ColorName,
	UnitPrice,
	CASE
		WHEN BrandName = 'Contoso' AND ColorName = 'Red' THEN 0.1
		ELSE 0
	END AS 'Desconto'
FROM
	DimProduct

--CASE + OR
SELECT 
	ProductName,
	BrandName,
	ColorName,
	UnitPrice,
	CASE
		WHEN BrandName = 'Contoso' OR BrandName = 'Fabrikam' THEN 0.1
		ELSE 0
	END AS 'Desconto'
FROM 
	DimProduct

--CASE Aninhado
--CASE dentro de outro CASE

SELECT
	StoreKey,
	StoreName,
	StoreType,
	Status,
	EmployeeCount,
	CASE
		WHEN EmployeeCount >= 40 THEN
			CASE
				WHEN Status = 'Off' THEN 'LOJA FECHADA: ACIMA DE 40 FUNCIONARIOS'
				WHEN Status = 'ON' THEN 'LOJA ABERTA: ACIMA DE 40 FUNCIONARIOS'
				END
			WHEN EmployeeCount >= 30 THEN 'Entre 30 e 39 funcionarios'
			WHEN EmployeeCount >= 20 THEN 'Entre 20 e 29 funcionarios'
			ELSE 'Abaixo de 19 funcionarios'
		END AS 'Categoria'
FROM
	DimStore

--CASE ADITIVO
--Adicionamos uma condição a uma condição

SELECT
	ProductKey,
	ProductName,
	ProductCategoryName,
	ProductSubcategoryName,
	UnitPrice,
	CASE WHEN ProductCategoryName = 'TV and Video'
		THEN 0.10 ELSE 0.00 END
	+ CASE WHEN ProductSubCategoryName = 'Televisions'
	THEN 0.05 ELSE 0.00 END
FROM DimProduct 
INNER JOIN DimProductSubcategory
	ON DimProduct.ProductSubcategoryKey = DimProductSubcategory.ProductSubcategoryKey
		INNER JOIN DimProductCategory
			ON DimProductSubcategory.ProductCategoryKey = DimProductCategory.ProductCategoryKey

--EXERCICIOS
--=============================================
/*1. O setor de vendas decidiu aplicar um desconto aos produtos de acordo com a sua classe. O
percentual aplicado deverá ser de:
Economy -> 5%
Regular -> 7%
Deluxe -> 9%
a) Faça uma consulta à tabela DimProduct que retorne as seguintes colunas: ProductKey,
ProductName, e outras duas colunas que deverão retornar o % de Desconto e UnitPrice com
desconto.*/
SELECT ProductKey AS 'ID', ProductName AS 'Nome', UnitPrice AS 'Price',
CASE
	WHEN ClassName = 'Economy' THEN UnitPrice * (1 - 0.05)
	WHEN ClassName = 'Regular' THEN UnitPrice * (1 - 0.07)
ELSE UnitPrice * (1 - 0.09)
END AS 'Preço com desconto'
FROM DimProduct


/*b) Faça uma adaptação no código para que os % de desconto de 5%, 7% e 9% sejam facilmente
modificados (dica: utilize variáveis).*/
DECLARE @varDescontoEconomy FLOAT
SET @varDescontoEconomy = 0.10;

DECLARE @varDescontoRegular FLOAT
SET @varDescontoRegular = 0.07;

DECLARE @varDescontoDeluxe FLOAT
SET @varDescontoDeluxe = 0.09;

SELECT ProductKey AS 'ID', ProductName AS 'Nome', UnitPrice AS 'Price',
CASE
	WHEN ClassName = 'Economy' THEN UnitPrice * (1 - @varDescontoEconomy)
	WHEN ClassName = 'Regular' THEN UnitPrice * (1 - @varDescontoRegular)
	ELSE UnitPrice * (@varDescontoDeluxe - 1)
END AS 'Preço com desconto'
FROM DimProduct

/*2. Você ficou responsável pelo controle de produtos da empresa e deverá fazer uma análise da
quantidade de produtos por Marca.
A divisão das marcas em categorias deverá ser a seguinte:
CATEGORIA A: Mais de 500 produtos
CATEGORIA B: Entre 100 e 500 produtos
CATEGORIA C: Menos de 100 produtos
Faça uma consulta à tabela DimProduct e retorne uma tabela com um agrupamento de Total de
Produtos por Marca, além da coluna de Categoria, conforme a regra acima.*/
SELECT * FROM DimProduct

SELECT * FROM DimProductSubCategory

SELECT 
    BrandName AS 'Marca', 
	COUNT(*) AS 'Qtd. Produtos',
	CASE 
		WHEN COUNT(*) >= 500 THEN 'CATEGORIA A'
		WHEN COUNT(*) >= 100 THEN 'CATEGORIA B'
		ELSE 'CATEGORIA C'
END AS 'Categoria Classificada'
FROM DimProduct
GROUP BY BrandName

/*3. Será necessário criar uma categorização de cada loja da empresa considerando a quantidade de
funcionários de cada uma. A lógica a ser seguida será a lógica abaixo:
EmployeeCount >= 50; 'Acima de 50 funcionários'
EmployeeCount >= 40; 'Entre 40 e 50 funcionários'
EmployeeCount >= 30; 'Entre 30 e 40 funcionários'
EmployeeCount >= 20; 'Entre 20 e 30 funcionários'
EmployeeCount >= 40; 'Entre 10 e 20 funcionários'
Caso contrário: 'Abaixo de 10 funcionários'
Faça uma consulta à tabela DimStore que retorne as seguintes informações: StoreName,
EmployeeCount e a coluna de categoria, seguindo a regra acima.*/
SELECT
    StoreKey,
    StoreName,
    StoreType,
    Status,
    EmployeeCount,
    CASE
        WHEN EmployeeCount > 50 THEN 'Acima de 50 funcionários'
        WHEN EmployeeCount >= 40 THEN 'Entre 40 e 49 funcionarios'  
        WHEN EmployeeCount >= 30 THEN 'Entre 30 e 39 funcionarios'
        WHEN EmployeeCount >= 20 THEN 'Entre 20 e 29 funcionarios'
        WHEN EmployeeCount >= 10 THEN 'Entre 10 e 19 funcionarios'
        ELSE 'Abaixo de 10 funcionarios'
    END AS 'Categoria'
FROM
    DimStore;

/*4. O setor de logística deverá realizar um transporte de carga dos produtos que estão no depósito
de Seattle para o depósito de Sunnyside.
Não se tem muitas informações sobre os produtos que estão no depósito, apenas se sabe que
existem 100 exemplares de cada Subcategoria. Ou seja, 100 laptops, 100 câmeras digitais, 100
ventiladores, e assim vai.
O gerente de logística definiu que os produtos serão transportados por duas rotas distintas. Além
disso, a divisão dos produtos em cada uma das rotas será feita de acordo com as subcategorias (ou
seja, todos os produtos de uma mesma subcategoria serão transportados pela mesma rota):
Rota 1: As subcategorias que tiverem uma soma total menor que 1000 kg deverão ser
transportados pela Rota 1.
Rota 2: As subcategorias que tiverem uma soma total maior ou igual a 1000 kg deverão ser
transportados pela Rota 2.
Você deverá realizar uma consulta à tabela DimProduct e fazer essa divisão das subcategorias por
cada rota. Algumas dicas:
- Dica 1: A sua consulta deverá ter um total de 3 colunas: Nome da Subcategoria, Peso Total e Rota.
- Dica 2: Como não se sabe quais produtos existem no depósito, apenas que existem 100
exemplares de cada subcategoria, você deverá descobrir o peso médio de cada subcategoria e
multiplicar essa média por 100, de forma que você descubra aproximadamente qual é o peso total
dos produtos por subcategoria.
- Dica 3: Sua resposta final deverá ter um JOIN e um GROUP BY.*/
SELECT 
    ProductSubcategoryName AS 'Subcategoria', 
    ROUND(AVG(Weight) * 100, 2) AS 'Peso Total', 
    CASE
        WHEN SUM(Weight) < 1000 THEN 'Transportados pela ROTA 1'
        WHEN SUM(Weight) >= 1000 THEN 'Transportados pela ROTA 2'
    END AS 'Rota'
FROM 
    DimProduct
INNER JOIN DimProductSubcategory
ON
    DimProduct.ProductSubcategoryKey = DimProductSubcategory.ProductSubcategoryKey
GROUP BY ProductSubcategoryName


/*5. O setor de marketing está com algumas ideias de ações para alavancar as vendas em 2021. Uma
delas consiste em realizar sorteios entre os clientes da empresa.
Este sorteio será dividido em categorias:
‘Sorteio Mãe do Ano’: Nessa categoria vão participar todas as mulheres com filhos.
‘Sorteio Pai do Ano’: Nessa categoria vão participar todos os pais com filhos.
‘Caminhão de Prêmios’: Nessa categoria vão participar todas os demais clientes (homens e
mulheres sem filhos).
Seu papel será realizar uma consulta à tabela DimCustomer e retornar 3 colunas:
- FirstName AS ‘Nome’
- Gender AS ‘Sexo’
- TotalChildren AS ‘Qtd. Filhos’
- EmailAdress AS ‘E-mail’
- Ação de Marketing: nessa coluna você deverá dividir os clientes de acordo com as categorias
‘Sorteio Mãe do Ano’, ‘Sorteio Pai do Ano’ e ‘Caminhão de Prêmios*/
SELECT FirstName AS 'Nome', Gender AS 'Sexo', TotalChildren AS 'Qtd. Filhos', EmailAddress AS 'E-mail',
CASE
WHEN TotalChildren != 0 AND Gender = 'M' THEN 'Sorteio Pai do Ano' 
WHEN TotalChildren != 0 AND Gender = 'F' THEN 'Sorteio mãe do ano'
WHEN TotalChildren = 0 THEN 'Caminhão de prêmios'
END AS 'SORTEIO'
FROM DimCustomer

/*6. Descubra qual é a loja que possui o maior tempo de atividade (em dias). Você deverá fazer essa
consulta na tabela DimStore, e considerar a coluna OpenDate como referência para esse cálculo.
Atenção: lembre-se que existem lojas que foram fechadas.*/
SELECT 
	StoreName,
	OpenDate,
	CloseDate,
	CASE
		WHEN CloseDate IS NULL THEN DATEDIFF(DAY, OpenDate, GETDATE())
		ELSE DATEDIFF(DAY, OpenDate, CloseDate)
	END AS 'Dias de atividade'
FROM DimStore
